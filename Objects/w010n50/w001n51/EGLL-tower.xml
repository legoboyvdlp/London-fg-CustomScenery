<?xml version="1.0" encoding="UTF-8" ?>

<PropertyList>

 <path>EGLL-tower.ac</path>


<animation>
<type>shader</type>
<shader>chrome</shader>
<texture>EGLL-tower1.png</texture>

<object-name>windows.001</object-name>
<object-name>roof-window</object-name>
 
</animation>



<!--
<effect>
 <inherits-from>Effects/model-transparent</inherits-from>
 <object-name>windows.001</object-name>
 <object-name>roof-window</object-name>
 
</effect>
-->

 <nasal>
  <load>
    loop_id = 0;

    setprop("/models/static/EGLL_tower_z", 1);
    setprop("/models/static/EGLL_tower_richt", 'vor');
    srand(); 

	var timer = maketimer(1, func(){ 
					setprop("/models/static/EGLL_tower_richt", 'vor');
					state = 'vor';
					});

	var timer2 = maketimer(1, func(){ 
					#print('train 1 going back');
					setprop("/models/static/EGLL_tower_richt", 'rueck');
					state = 'rueck';
					});
				

    train_pos = func
               {
               x = getprop("/models/static/EGLL_tower_z");
               state = getprop("/models/static/EGLL_tower_richt");
               if (state == 'vor')
                 {
                 x = x + 0.1;
                 }
               if (state == 'rueck') 
                 {
                 x = x - 0.1;
                 }
                 
               if (x > 75)
                 {
                 timer2.singleShot = 1;
                 fuzzy = rand() * 10;
                 #print(fuzzy);
                 timer2.restart(6+fuzzy);
                 x = 75;
                 setprop("/models/static/EGLL_tower_z", x);
                 setprop("/models/static/EGLL_tower_richt", 'warte');
                 state = 'warte';
                 }
                 
               if (1 > x)
                 {
                 timer.singleShot = 1;
                 timer.restart(6);
                 x = 1;
                 setprop("/models/static/EGLL_tower_z", x);
                 setprop("/models/static/EGLL_tower_richt", 'warte');
                 state = 'warte';
                 }
              
             
             
               setprop("/models/static/EGLL_tower_z", x);
              
               }

    loop = func(id) 
           {
           train_pos();
           id == loop_id or return;
           settimer(func { loop(id) }, 0.01);
           }

    loop(loop_id += 1);
    
    
    
    
   </load>

   <unload>loop_id += 1</unload>
 </nasal>




 <animation>
  <type>translate</type>
  <object-name>external-lift</object-name>
  <property>/models/static/EGLL_tower_z</property>
  <axis>
   <x>0</x>
   <y>0</y>
   <z>1</z>
  </axis>
 </animation>

  <model>
                <name>obst_top_red01</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>6.6</x-m>
                  <y-m>3.14</y-m>
                  <z-m>89.44</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>

    <model>
                <name>obst_top_red02</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>-6.26</x-m>
                  <y-m>3.67</y-m>
                  <z-m>89.44</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>

    <model>
                <name>obst_top_red03</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>0.0</x-m>
                  <y-m>-7.36</y-m>
                  <z-m>89.44</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>

   
 <model>
                <name>obst_low_red01</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>0</x-m>
                  <y-m>-8.1</y-m>
                  <z-m>75.46</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>

    <model>
                <name>obst_low_red02</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>-6.9</x-m>
                  <y-m>4.06</y-m>
                  <z-m>75.46</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>

    <model>
                <name>obst_low_red03</name>
                <path>Models/Effects/pos_lamp_red_light_2st.xml</path>
                <offsets>
                  <x-m>7.25</x-m>
                  <y-m>3.47</y-m>
                  <z-m>75.46</z-m>
                  <pitch-deg> 0.00</pitch-deg>
                  <heading-deg>0.0 </heading-deg>
                </offsets>
        </model>



 

</PropertyList>
